name: Front-end CI/CD Pipeline

on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop
      - main

jobs:
  setup-environment:
    name: Setup Environment (20.x)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache Node Modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ matrix.node-version }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            node-modules-${{ matrix.node-version }}-

      - name: Install Dependencies
        run: npm install

  # lint:
  #   name: üîç Lint Codebase
  #   runs-on: ubuntu-latest
  #   needs: setup-environment

  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v4

  #     - name: Restore Node Modules from Cache
  #       uses: actions/cache@v4
  #       with:
  #         path: node_modules
  #         key: node-modules-${{ hashFiles('package-lock.json') }}
  #         restore-keys: |
  #           node-modules-

  #     - name: Run Linting
  #       run: npm run lint

  # test:
  #   name: üß™ Run Test Cases
  #   runs-on: ubuntu-latest
  #   needs: lint

  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v4

  #     - name: Restore Node Modules from Cache
  #       uses: actions/cache@v4
  #       with:
  #         path: node_modules
  #         key: node-modules-${{ hashFiles('package-lock.json') }}
  #         restore-keys: |
  #           node-modules-

  #     - name: Run Test Cases
  #       run: npm run test

  build:
    name: üõ†Ô∏è Build Application
    runs-on: ubuntu-latest
    needs: setup-environment

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Restore Node Modules from Cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            node-modules-

      - name: Build Application
        run: npm run build

  deploy-to-development:
    name: üöÄ Deploy to Development (develop branch)
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/develop'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Deploy to Vercel (Development)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_DEVELOPMENT_TOKEN }}
        run: |
          npx vercel --token $VERCEL_TOKEN --env MERN_PUBLIC_ENV=development --yes --confirm

  deploy-to-production:
    name: üöÄ Deploy to Production (main branch)
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Deploy to Vercel (Production)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_PROD_TOKEN }}
        run: |
          npx vercel --token $VERCEL_TOKEN --env MERN_PUBLIC_ENV=production --prod --yes --confirm
